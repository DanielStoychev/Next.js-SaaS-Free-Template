# Development Docker Compose Configuration
# For local development with hot reloading

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saas-template-db-dev
    environment:
      POSTGRES_DB: saas_template_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - saas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: saas-template-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - saas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Next.js Development Server (optional - usually run locally)
  web:
    build:
      context: ../../
      dockerfile: infra/docker/web.Dockerfile
      target: base
    container_name: saas-template-web-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/saas_template_dev
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - ../../:/app
      - /app/node_modules
      - /app/.next
    networks:
      - saas-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: pnpm dev

  # Prisma Studio (Database GUI)
  prisma-studio:
    build:
      context: ../../
      dockerfile: infra/docker/web.Dockerfile
      target: base
    container_name: saas-template-prisma-studio
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/saas_template_dev
    ports:
      - "5555:5555"
    volumes:
      - ../../prisma:/app/prisma
    networks:
      - saas-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: pnpm prisma studio --hostname 0.0.0.0

  # MailHog (Email testing)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: saas-template-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - saas-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
    name: saas_template_postgres_dev
  redis_data_dev:
    name: saas_template_redis_dev

networks:
  saas-network:
    driver: bridge
    name: saas-template-network
